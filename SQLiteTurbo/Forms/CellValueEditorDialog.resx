<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>